- name: Create a directory for ssl cert
  hosts: localhost
  become: false
  tasks:
    - name: Create a directory
      ansible.builtin.file:
        path: /tmp/zalupa
        state: directory
        mode: 0775

- name: Update Let's Encrypt Certificate
  hosts: source
  become: false
  user: root
  tasks:
    - name: up ens224 
      shell: "ifup ens224" 
      ignore_errors: yes
      changed_when: true
      failed_when: false

    - name: pause for "{{ wait_seconds | int }}" second(s)
      ansible.builtin.pause:
        seconds: "{{ wait_seconds | int }}"

    - name: Renew Let's Encrypt certificate
      shell: "certbot renew --cert-name {{ new_cert_name  }}"
      args:
        warn: true 
        
    - name: Synchronization using rsync protocol (pull)
      ansible.posix.synchronize:
        mode: pull
        src: /etc/letsencrypt/live/{{ new_cert_name }}/
        dest: /etc/letsencrypt/live/{{ cert_name }}/
        rsync_opts:
          - "--copy-links"
          - "--delete-after"
          - "--chmod=Du=rwx,Dg=rwx,Do=rwx,Fu=rwx,Fg=rwx,Fo=rwx"
          - "-zrpth"
          
    - name: pause for {{ wait_seconds | int }} second(s)
      ansible.builtin.pause:
        seconds: "{{ wait_seconds | int }}"

    - name: down ens224 
      shell: "ifdown ens224" 
      ignore_errors: yes
      changed_when: true
      failed_when: false

    - name: Get certificate from HAProxy
      shell: "cat /etc/letsencrypt/live/{{ cert_name }}/fullchain.pem /etc/letsencrypt/live/{{ cert_name }}/privkey.pem > /etc/letsencrypt/live/{{ cert_name }}/pizda.pem"
      changed_when: true
      failed_when: false
      
    - name: Check if certificate file exists
      stat:
        path: /etc/letsencrypt/live/{{ cert_name }}/pizda.pem
      register: cert_file

    - name: Debug certificate file existence
      debug:
        msg: "Certificate file exists: {{ cert_file.stat.exists }}"
        
    - name: Validate HAProxy configuration
      command: haproxy -c -f /etc/haproxy/haproxy.cfg
      register: haproxy_config_check
      ignore_errors: yes

    - name: Fail if HAProxy configuration is invalid
      fail:
        msg: "HAProxy configuration is invalid"
      when: haproxy_config_check.rc != 0

    - name: Reload HAProxy configuration
      systemd:
        name: haproxy
        state: reloaded
      when: haproxy_config_check.rc == 0

    - name: Reload Asterisk
      shell: "asterisk -rx 'module reload http'" 
      ignore_errors: yes
      changed_when: true
      failed_when: false

- hosts: source
  gather_facts: no
  tasks:
    - name: Synchronization using rsync protocol (pull)
      ansible.posix.synchronize:
        mode: pull
        src: /etc/letsencrypt/live/{{ cert_name }}/
        dest: /tmp/zalupa/
        rsync_opts:
          - "--copy-links"
          - "--delete-after"
          - "--chmod=Du=rwx,Dg=rwx,Do=rwx,Fu=rwx,Fg=rwx,Fo=rwx"
          - "-zrpth"

- hosts: queue1
  gather_facts: no
  tasks:
    - name: Synchronization using rsync protocol (pull)
      ansible.posix.synchronize:
        mode: push
        src: /tmp/zalupa/
        dest: /etc/letsencrypt/live/{{ cert_name }}/

    - name: Reload Asterisk
      shell: "asterisk -rx 'module reload http'" 
      ignore_errors: yes
      changed_when: true
      failed_when: false

- hosts: queue2
  gather_facts: no
  tasks:
    - name: Synchronization using rsync protocol (pull)
      ansible.posix.synchronize:
        mode: push
        src: /tmp/zalupa/
        dest: /etc/letsencrypt/live/{{ cert_name }}/

    - name: Reload Asterisk
      shell: "asterisk -rx 'module reload http'" 
      ignore_errors: yes
      changed_when: true
      failed_when: false

- hosts: queue3
  gather_facts: no
  tasks:
    - name: Synchronization using rsync protocol (pull)
      ansible.posix.synchronize:
        mode: push
        src: /tmp/zalupa/
        dest: /etc/letsencrypt/live/{{ cert_name }}/

    - name: Reload Asterisk
      shell: "asterisk -rx 'module reload http'" 
      ignore_errors: yes
      changed_when: true
      failed_when: false

- hosts: queue4
  gather_facts: no
  tasks:
    - name: Synchronization using rsync protocol (pull)
      ansible.posix.synchronize:
        mode: push
        src: /tmp/zalupa/
        dest: /etc/letsencrypt/live/{{ cert_name }}/

    - name: Reload Asterisk
      shell: "asterisk -rx 'module reload http'" 
      ignore_errors: yes
      changed_when: true
      failed_when: false

- hosts: localhost
  tasks:
    - name: Remove /tmp/zalupa directory
      ansible.builtin.file:
        state: absent
        path: /tmp/zalupa/
